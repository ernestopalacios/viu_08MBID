---
title: "Trabajo Practico"
subtitle: "#30DayChartChallenge"

date: now
date-format: "MMM D, YYYY"

author: "Ernesto V. Palacios"

format:
  typst:
    toc: true
    toc-title: Contenido
    section-numbering: 1.1.a
    papersize: a4
    margin:
      x: 2cm
      y: 2cm
    columns: 1
    lang: es
    mainfont: "source-sans-pro"
---

{{< pagebreak >}}

# Part to Hole

```{python}
#| echo: false
#| label: fig-example
#| fig-cap: "PartToHole - Fuente: Interna - EERSSA 2023"

# Codigo fuente de: 
#https://matplotlib.org/stable/gallery/pie_and_polar_charts/nested_pie.html

import matplotlib.pyplot as plt
import numpy as np

fig, ax = plt.subplots(figsize=(6, 5), subplot_kw=dict(aspect="equal"))

size = 0.3

activ  = ["731 Preventivo",
          "889 Correctivo",
          "170 Predictivo",
          "274 Luminarias",
          "\n274 Luminarias\n",
          "\n274 Luminarias\n",
          "209 Acometidas",
          "185 Medidores",
          "72  Ocasionales"]
          



# Datos de la cantidad de eventos en el año.
vals = np.array([[731., 889., 170.], [ 274., 0., 0.], [209., 185., 72.]])

# Colores
cmap = plt.colormaps["tab20c"] # Paleta
outer_colors = cmap(np.arange(3)*4) # tres categorias con sus colores
inner_colors = cmap([1, 2, 3, 5, 6, 8, 9, 10, 11]) #Subcolores por categ.

#Pie Externo
ax.pie(vals.sum(axis=1), radius=1, colors=outer_colors,
       wedgeprops=dict(width=size, edgecolor='w'))

#Pie Interno
wedges, texts = ax.pie(vals.flatten(), radius=1-size, colors=inner_colors,
       wedgeprops=dict(width=size, edgecolor='w'))

# Cajas       
bbox_props = dict(boxstyle="square,pad=0.3", fc="w", ec="k", lw=0.72)
kw = dict(arrowprops=dict(arrowstyle="-"),
          bbox=bbox_props, zorder=1, va="center")
          
for i, p in enumerate(wedges):
    ang = (p.theta2 - p.theta1)/2. + p.theta1
    y = np.sin(np.deg2rad(ang))
    x = np.cos(np.deg2rad(ang))
    horizontalalignment = {-1: "right", 1: "left"}[int(np.sign(x))]
    connectionstyle = f"angle,angleA=0,angleB={ang}"
    kw["arrowprops"].update({"connectionstyle": connectionstyle})
    ax.annotate(activ[i], xy=(x, y), xytext=(1.35*np.sign(x), 1.4*y),
                horizontalalignment=horizontalalignment, **kw)

ax.set(aspect="equal", title=
       """ACTIVIDADES REALIZADAS EN EL PRIMER TRIMESTRE DEL 2023\n 
Se detalla la cantidad y tipo de actividades realizadas\n 
por los grupos de trabajo de la Jefatura Zonal Zamora - EERSSA 2023\n\n""" )

ax.annotate("Gráfico: epalacios | Fuente: EERSSA 2023 (c) | Creado con Matplotlib", xy=(-1.0, 1.0), xytext=(-2.5 , -1.75))


ax.legend(["Mantenimiento", "Alumbrado", "Usuarios"], loc=(-0.3, 0.8 ))
plt.show()

```

**Audiencia:**

-   Esta gráfica esta destinada para formar parte de reportes internos, será analizada por técnicos de la rama eléctrica.

**Objetivo:**

-   Rápidamente identificar el tipo de actividad que se ha desarrollado con mayor frecuencia en un periodo de tiempo definido.

-   Visualizar la distribución de todas las actividades realizadas en el primer semetre del 2023.

-   Identificar las proporciones de cada Tipo de Actividad, dentro de cada categoría.

**Herramienta:**

-   Se ha utilizado Python ya que este tipo de gráficas puede ser necesario dibujarlas programáticamente, para reportes, mensuales, trimestrales, semestrales, anuales, etc.

# Neo

Una nueva presentación para la gráfica 01. Part to Hole

![Neo - Fuente: Interna - EERSSA 2023](images/02_neo.png){width="18cm"}

**Audiencia:**

-   Esta gráfica esta destinada para formar parte de reportes internos, será analizada por técnicos de la rama eléctrica.

**Objetivo:**

-   Comparar la cantidad de actividades de tipo `Preventivas` en relación a las de tipo `Correctivas`.

-   Este tipo de gráfico sería estático para la presentación de algún reporte impreso en el caso de encontrarse alguna novedad que sea necesaria su comunicación.

**Herramienta:**

-   Se ha utilizado Datawrapper, una posibilidad es generar los datos desde Python, exportarlos a Google Sheets y desde allí, una vez actualizados, generarlos utilizando Datawrapper.

-   Aunque puede llegar a ser posible la generación de esta misma gráfica en Python, el llegar el nivel de púido que se logra con Datawrapper hace que se vuelva una mejor opción.

{{< pagebreak >}}

# Makeover

![Makeover - Fuente: ARCERNNR Atlas del Sector eléctrico ecuatoriano 2023, pág 79](images/03_makeover.png){width="18cm"}

**Audiencia:**

-   Esta gráfica esta destinada para formar parte de reportes internos, será analizada por técnicos de la rama eléctrica.

**Objetivo:**

-   Identificar los rangos de empresas con pérdidas de energía.

-   Comprender la cantidad de empresas eléctricas que se encuentran en cada categoría.

**Herramienta:**

-   Se ha código de `R` con la librería `ggplot` con las capas: `geom_boxplot`, `geom_jitter` y anotaciones de texto .

![imagen orginal tomada de la fuente](images/03_og.png){width="5cm"}

{{< pagebreak >}}

# Waffle

**Audiencia:**

-   Público en General

**Objetivo:**

-   Imagen interactiva, muestra como han ido cambiado la cantidad y tipo de medidores en los tres últimos años.

-   El objetivo de la empresa eléctrica es disminuir los medidores monofásicos y que todos sean bifásicos.

**Herramienta:**

-   Herramienta en línea: Fluorish, tipo de gráfica: parlamento (360) enlace en la misma imagen.

[![Waffle - Cantidad de Medidores de la EERSSA (en miles de medidores)](images/04_Waffle.jpg){fig-alt="Creado con Flourish" width="18cm"}](https://public.flourish.studio/visualisation/17948001/)

# Diverging

![Diverging - Tipo de activdad y su porcentaje dedicada a cada alimentador](images/05_diverging.png){width="18cm"}

**Audiencia:**

-   Esta gráfica esta destinada para formar parte de reportes internos, será analizada por técnicos de la rama eléctrica.

**Objetivo:**

-   Permite tener una idea general de cómo se han distribuido las actividades realizadas por las cuadrillas en cada ramal eléctrico.

**Herramienta:**

-   R - `ggplot` como base se uso el artículo de David Keyes: [**How to Make a Diverging Bar Chart in R**](https://rfortherestofus.com/2021/10/diverging-bar-chart/)

{{< pagebreak >}}

# OECD data

![OECD (2024), Population (indicator). doi: 10.1787/d434f82b-en (Accessed on 25 June 2024)](images/06_OECD.png){width="18cm"}

**Audiencia:**

-   General.

**Objetivo:**

-   Identificar el pico máximo desde el cual la población en Japón inicia su descenso.

**Herramienta:**

-   R - `ggplot`

{{< pagebreak >}}

# Hazards

# Circular

![Causa de accidentes eléctricos en USA desde el 2011 al 2022](images/07_08_Hazards-Circular.png){width="18cm"}

**Audiencia:**

-   Personal técnico / obrero.

**Objetivo:**

-   Dar a conocer las principales causas de accidentes eléctricos en personal que trabaja en redes eléctricas.

**Herramienta:**

-   Excel 365

    <div>

    Fuente: [Electrical Fatality Causes as Reported to OSHA](https://www.esfi.org/electrical-fatalities-in-the-workplace-2011-2022/)

    </div>

{{< pagebreak >}}

# Major / Minor

![Major/Minor: Actividades Correctivas vs Preventivas en el 2023](images/09_Major-Minor.png){width="19cm"}

**Audiencia:**

-   Personal técnico / obrero.

**Objetivo:**

-   Dar a conocer de manera general como se han desarrollado las actividades a lo largo del 2023.

**Herramienta:**

-   R `ggplot : grouped bar plot`

{{< pagebreak >}}

# Physical

![Physical - cantidad de herramientas asignadas a cada cuadrilla](images/10_Physical.png){width="16cm"}

**Audiencia:**

-   Personal obrero.

**Objetivo:**

-   Informar al personal la cantidad de herramientas que estan asignadas e inventariadas a cada cuadrilla para el desarollo de las labores diarias.

**Herramienta:**

-   R `ggplot`
-   Referencia: [Horizontal barplot with R and ggplot2](https://r-graph-gallery.com/web-horizontal-barplot-with-labels-the-economist.html)

{{< pagebreak >}}

# Mobile friendly
